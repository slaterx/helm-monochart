name: rendered_from_helmfile
arch: rendered_from_helmfile
port: 8080

# Defaults: Pod
pod:
  # OK, so this logic is weird:
  # 'enabled: true' == deploy just a pod with pod config below
  # 'enabled: false' == don't deploy a pod but use the pod config below for Deployment, Cronjob, etc..
  enabled: false
  enabled_port: false

  dnsPolicy: ClusterFirst
  iam_role: false
  imagePullPolicy: IfNotPresent
  image_name: rendered_from_helmfile
  image_tag: rendered_from_helmfile
  restartPolicy: Always
  schedulerName: default-scheduler
  terminationGracePeriodSeconds: 30

  command:
    override: false
    command:
      - "/bin/sh"
    args:
      - echo 'example'
      - echo 'entrypoint'
      - echo 'override'

  securityContext: {}

  env: rendered_from_helmfile

  livenessProbeDisabled: false
  livenessProbe:
    # httpGet:
    #   path: /ping
    # initialDelaySeconds: 30
    # timeoutSeconds: 1
    # periodSeconds: 15
    # failureThreshold: 2

  readinessProbeDisabled: false
  readinessProbe:
    # httpGet:
    #   path: /ping
    # initialDelaySeconds: 30
    # timeoutSeconds: 1
    # periodSeconds: 15
    # failureThreshold: 2

  resources:
    limits:
      cpu: 500m
      memory: 500Mi
    requests:
      cpu: 200m
      memory: 150Mi

  initContainers: []

# Defaults: Deployment
deployment:
  enabled: false
  replicas: 3
  revisionHistoryLimit: 3
  progressDeadlineSeconds: 600
  spec:
    template:
      metadata:
        annotations: {}
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate

# Defaults: Horizontal Pod Autoscaler
hpa:
  enabled: false
  min_replicas: 1
  max_replicas: 3
  cpu_scale_target: !!string 40

# Defaults: Ingress
ing:
  enabled: false
  public_in_prod: false
  acm_arn: rendered_from_helmfile
  external_dns: rendered_from_helmfile
  healthcheck_interval_seconds: !!string 10
  healthcheck_path: /ping
  healthcheck_port: traffic-port
  healthcheck_timeout_seconds: !!string 2
  private_subnets: rendered_from_helmfile
  public_subnets: rendered_from_helmfile
  success_codes: 200-404

# Defaults: Service
svc:
  enabled: false

# Defaults: Cronjob
cronjob:
  enabled: false
  concurrencyPolicy: Replace
  failedJobsHistoryLimit: 1
  schedule: rendered_from_helmfile
  successfulJobsHistoryLimit: 3
  suspend: false

# Defaults: Secret
secret:
  enabled: false
  type: Opaque

persistence:
  enabled: false
  storageClass:
    createNew: false
    azs:
    - us-east-1a
    - us-east-1b
    - us-east-1c
    - us-east-1d
    - us-east-1e
    - us-east-1f
    name: helmfile
    parameters:
      type: gp2
      encrypted: "true"
    provisioner: kubernetes.io/aws-ebs
  claims:
  - name: helmfile
    class: gp2
    storage: 2Gi
    path: /opt/
    accessModes:
    - ReadWriteOnce

# Defaults: Istio
istio:
  enabled: false
